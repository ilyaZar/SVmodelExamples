stop("Unknown plot type.")
}
title_text <- paste0("Posterior Estimatation Results: ",
"(red: post. mean; green: true values if provided)")
graphics::title(main = title_text,
outer = TRUE)
graphics::par(mfrow = c(1, 1))
}
# else if (graphics::plot_type == "leah") {
#   res_plot <- res[burnin + 1:iterations, ]
#   graphics::par(mfrow = c(2, 3), oma = c(0, 0, 2, 0))
#   with(res_plot, graphics::hist(samples_sigv,
#                                 xlab = expression(sigma_v), ylab = "density",
#                                 main = NA))
#   graphics::abline(v = sqrt(10), lty = 2, col = "darkblue", lwd = 2)
#   with(res_plot, graphics::plot(samples_sigw, samples_sigv,
#                                 xlab = expression(sigma_w), ylab = expression(sigma_v),
#                                 main = NA, col = "darkblue"))
#   with(res_plot, graphics::plot(samples_sigv, type = "l",
#                                 ylab = expression(sigma_v),
#                                 main = NA, xlim = c(0, iterations - burnin)))
#   with(res_plot, graphics::plot(samples_sigv, samples_sigw,
#                                 xlab = expression(sigma_v), ylab = expression(sigma_w),
#                                 main = NA, col = "darkblue"))
#   with(res_plot, graphics::hist(samples_sigw,
#                                 xlab = expression(sigma_w), ylab = "density",
#                                 main = NA))
#   graphics::abline(v = 1, lty = 2, col = "darkblue", lwd = 2)
#   with(res_plot, graphics::plot(samples_sigw, type = "l",
#                                 ylab = expression(sigma_w),
#                                 main = NA, xlim = c(0, iterations - burnin)))
#   graphics::title("Posterior Estimates", outer = TRUE)
# }
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
set.seed(1)
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
set.seed(1)
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
set.seed(1)
# out_pmmh_smctc <- sv_model_pmmh(data = yt,
#                                 starting_vals = starting_vals,
#                                 rw_mh_sd = rw_sd,
#                                 particles = particle_number,
#                                 iterations = MM,
#                                 burnin = burn)
# plot_pmmh_output(output_pmmh = out_pmmh_smctc,
#                  burn,
#                  true_vals = c(sigmaXinit, betaYinit))
outPMH <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
plot_pmmh_output(output_pmmh = outPMH,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 2000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
starting_vals
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
particle_number <- 5000
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
0.25^2
sqrt(0.25)
starting_vals
ystem.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
out_pmmh_r
diag(rw_sd^2)
rw_sd
ibrary(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 1.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
