initVals = startingVals,
rwMHsd = rwSD,
particles = particleNumber,
iterations = MM,
burnin = burn)
)
devtools::document()
||||||| dd8dd46
=======
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
source('~/Dropbox/projects/gsoc21/SVmodelExamples/09_example.R', echo=TRUE)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
yt
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
a
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 10
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5
starting_vals <- c(phiXinit, 2, 2)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
sv_model_al_tracking(data = yt,
starting_vals = starting_vals,
particles = particle_number,
num_progress_outputs = Tinit)
>>>>>>> 101ccee8efcd1920e0f9a1b6a126cfc1efb4588e
source('~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R', echo=TRUE)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 1.97
Xinit      <- 0
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 10
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
# startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
startingTrajectory
source('~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R', echo=TRUE)
startingTrajectory
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 1.97
Xinit      <- 0
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 10
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
# startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
startingTrajectory
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
startingTrajectory
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 1.97
Xinit      <- 0
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 10
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 1.97
Xinit      <- 0.123456
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 10
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 1.97
Xinit      <- 0.123456
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 10
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
startingTrajectory <- c(Xinit, xt)
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
source('~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R', echo=TRUE)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R", echo=TRUE)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R", echo=TRUE)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 0.97
Xinit      <- 0.123456
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 1000
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
# startingTrajectory <- c(Xinit, xt)
startingTrajectory <- xt
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R", echo=TRUE)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 0.97
Xinit      <- 0.123456
dataSimulSV <- generateDataSimulSV(TT = Tinit,
phiX = phiXinit,
sigmaX = sigmaXinit,
betaY = betaYinit,
initStateX0 = Xinit)
xt <- dataSimulSV$statesXt
yt <- dataSimulSV$measurementsYt
particleNumber <- 1000
MM    <- 5000
burn  <- 4000 # round(MM/2)
startingVals       <- c(phiXinit, 200, 200)
# startingTrajectory <- c(Xinit, xt) + rnorm(Tinit + 1, sd = 2)
# startingTrajectory <- c(Xinit, xt)
startingTrajectory <- xt
set.seed(42)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R", echo=TRUE)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_A_example.R", echo=TRUE)
source("~/Dropbox/projects/gsoc21/SVmodelExamples/03_B_example.R", echo=TRUE)
outPG <- svModelPG(data = yt,
startingVals = startingVals,
startingTrajectory = startingTrajectory,
particles = particleNumber,
iterations = MM)
