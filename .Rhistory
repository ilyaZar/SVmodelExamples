burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
starting_vals
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
particle_number <- 5000
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
0.25^2
sqrt(0.25)
starting_vals
ystem.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
out_pmmh_r
diag(rw_sd^2)
rw_sd
ibrary(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelExamples)
set.seed(1234)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.25
betaYinit  <- 1.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmmh_output(output_pmmh = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmmh_output(output_pmmh = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
43*14
45*14
library(SVmodelRcppSMC)
dat <- read.csv("./data/logreturns2012to2014.csv", header = F)
measurements <- dat[, 1]
# Now with a FINER grid:
# set.seed(123)
num_simul       <- 10
par_seq_phi     <- seq(0.95, 0.999, by = 0.004)
len_par_seq_phi <- length(par_seq_phi)
out_log_like    <- matrix(0, len_par_seq_phi, num_simul)
sigma_x_fix     <- 0.16
beta_y_fix      <- 0.7
num_particles   <- 1000
for (j in 1:num_simul) {
for (i in 1:len_par_seq_phi) {
out_log_like[i, j] <- bpf_loglike_sv(lNumber = num_particles,
measurements = measurements,
starting_vals =  c(par_seq_phi[i],
sigma_x_fix,
beta_y_fix))
print(paste(j,":",i))
}
plot_boxplot_loglike_estimates(out_log_like,
par_seq_phi,
num_simul)
library(SVmodelRcppSMC)
dat <- read.csv("./data/logreturns2012to2014.csv", header = F)
measurements <- dat[, 1]
# Now with a FINER grid:
# set.seed(123)
num_simul       <- 10
par_seq_phi     <- seq(0.95, 0.999, by = 0.004)
len_par_seq_phi <- length(par_seq_phi)
out_log_like    <- matrix(0, len_par_seq_phi, num_simul)
sigma_x_fix     <- 0.16
beta_y_fix      <- 0.7
num_particles   <- 1000
for (j in 1:num_simul) {
for (i in 1:len_par_seq_phi) {
out_log_like[i, j] <- bpf_loglike_sv(lNumber = num_particles,
measurements = measurements,
starting_vals =  c(par_seq_phi[i],
sigma_x_fix,
beta_y_fix))
print(paste(j,":",i))
}
plot_boxplot_loglike_estimates(out_log_like,
par_seq_phi,
num_simul)
library(SVmodelRcppSMC)
dat <- read.csv("./data/logreturns2012to2014.csv", header = F)
measurements <- dat[, 1]
# Now with a FINER grid:
# set.seed(123)
num_simul       <- 10
par_seq_phi     <- seq(0.95, 0.999, by = 0.004)
len_par_seq_phi <- length(par_seq_phi)
out_log_like    <- matrix(0, len_par_seq_phi, num_simul)
sigma_x_fix     <- 0.16
beta_y_fix      <- 0.7
num_particles   <- 1000
for (j in 1:num_simul) {
for (i in 1:len_par_seq_phi) {
out_log_like[i, j] <- bpf_loglike_sv(lNumber = num_particles,
measurements = measurements,
starting_vals =  c(par_seq_phi[i],
sigma_x_fix,
beta_y_fix))
print(paste(j,":",i))
}
library(SVmodelRcppSMC)
dat <- read.csv("./data/logreturns2012to2014.csv", header = F)
measurements <- dat[, 1]
# Now with a FINER grid:
# set.seed(123)
num_simul       <- 10
par_seq_phi     <- seq(0.95, 0.999, by = 0.004)
len_par_seq_phi <- length(par_seq_phi)
out_log_like    <- matrix(0, len_par_seq_phi, num_simul)
sigma_x_fix     <- 0.16
beta_y_fix      <- 0.7
num_particles   <- 1000
for (j in 1:num_simul) {
for (i in 1:len_par_seq_phi) {
out_log_like[i, j] <- bpf_loglike_sv(lNumber = num_particles,
measurements = measurements,
starting_vals =  c(par_seq_phi[i],
sigma_x_fix,
beta_y_fix))
print(paste(j,":",i))
}
plot_boxplot_loglike_estimates(out_log_like,
par_seq_phi,
num_simul)
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmcmc_output(output_pmcmc = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmcmc_output(output_pmcmc = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.2
betaYinit  <- 0.7
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 20
MM    <- 5000
burn  <- 4000 #round(MM/2)
starting_vals      <- c(phiXinit, 20, 20)
conditional_x_init <- c(Xinit, xt)
system.time(
out_pg_r <- pg_sv(y = yt,
num_particles = particle_number,
starting_values = starting_vals,
num_iter = MM,
x_r_init = conditional_x_init,
as_sampling = TRUE)
)
plot_pmcmc_output(output_pmcmc= out_pg_r,
burnin = burn,
true_vals = c(sigmaXinit, betaYinit))
# Testing SVmodelExamples
library(SVmodelRcppSMC)
set.seed(123)
Tinit      <- 100
phiXinit   <- 0.9
sigmaXinit <- 0.15
betaYinit  <- 0.9
Xinit      <- 0
data_simul_sv <- generate_data_simul_sv(TT = Tinit,
phi_x = phiXinit,
sigma_x = sigmaXinit,
beta_y = betaYinit,
init_state_x0 = Xinit)
xt <- data_simul_sv$states_xt
yt <- data_simul_sv$measurements_yt
particle_number <- 5000
MM    <- 1000
burn  <- round(MM/2)
rw_sd <- c(0.1, 0.1)
starting_vals <- c(phiXinit, 2, 2)
system.time(
out_pmmh_smctc <- sv_model_pmmh(data = yt,
starting_vals = starting_vals,
rw_mh_sd = rw_sd,
particles = particle_number,
iterations = MM,
burnin = burn)
)
plot_pmcmc_output(output_pmcmc = out_pmmh_smctc,
burn,
true_vals = c(sigmaXinit, betaYinit))
system.time(
out_pmmh_r <- pmmh_sv(num_particles = particle_number,
rw_vcm_prop = diag(rw_sd^2),
y = yt,
starting_vals = starting_vals,
num_iter = MM)
)
plot_pmcmc_output(output_pmcmc = out_pmmh_r,
burn,
true_vals = c(sigmaXinit, betaYinit))
